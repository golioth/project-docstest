"use strict";(self.webpackChunkgolioth_developer_training=self.webpackChunkgolioth_developer_training||[]).push([[464],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return d}});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var l=n.createContext({}),s=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},p=function(e){var t=s(e.components);return n.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),h=s(r),d=i,f=h["".concat(l,".").concat(d)]||h[d]||u[d]||o;return r?n.createElement(f,a(a({ref:t},p),{},{components:r})):n.createElement(f,a({ref:t},p))}));function d(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,a=new Array(o);a[0]=h;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:i,a[1]=c;for(var s=2;s<o;s++)a[s]=r[s];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}h.displayName="MDXCreateElement"},6518:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return c},contentTitle:function(){return l},metadata:function(){return s},toc:function(){return p},default:function(){return h}});var n=r(7462),i=r(3366),o=(r(7294),r(3905)),a=["components"],c={sidebar_position:1},l="Zephyr Introduction",s={unversionedId:"zephyr-intro/overview",id:"zephyr-intro/overview",title:"Zephyr Introduction",description:"The Zephyr Tutorial is the main part of the training targeted at beginner to intermediate hardware and firmware users. Zephyr is the most likely development path for an advanced product including an RTOS and highlights many of the best features of Golioth. It also showcases the flexibility of Zephyr: we can target the same hardware that we had previously been using with CircuitPython. This section of the tutorial will include written instructions for getting started with the Zephyr toolchain and compiling early examples. The goal is to get through all examples, but this will be time permitting.",source:"@site/docs/zephyr-intro/overview.md",sourceDirName:"zephyr-intro",slug:"/zephyr-intro/overview",permalink:"/project-docstest/docs/zephyr-intro/overview",editUrl:"https://github.com/golioth/project-docstest/docs/zephyr-intro/overview.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"CircuitPython Demo",permalink:"/project-docstest/docs/circuitpython-exercises/circuitpython-demo"},next:{title:"Zephyr Toolchain Installation",permalink:"/project-docstest/docs/zephyr-intro/toolchain-install"}},p=[],u={toc:p};function h(e){var t=e.components,r=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"zephyr-introduction"},"Zephyr Introduction"),(0,o.kt)("p",null,"The Zephyr Tutorial is the main part of the training targeted at beginner to intermediate hardware and firmware users. Zephyr is the most likely development path for an advanced product including an RTOS and highlights many of the best features of Golioth. It also showcases the flexibility of Zephyr: we can target the same hardware that we had previously been using with CircuitPython. This section of the tutorial will include written instructions for getting started with the Zephyr toolchain and compiling early examples. The goal is to get through all examples, but this will be time permitting."))}h.isMDXComponent=!0}}]);